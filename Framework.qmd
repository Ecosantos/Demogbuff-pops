---
title: "Population responses to environmental stochasticity are primarily driven by survival-reproduction trade-offs and mediated by aridity"
author:
  - name: Gabriel S. Santos
    orcid: 0000-0001-7991-8807
    email: ssantos.gabriel@gmail.com
    affiliations:
      - name: Afiliação 1
      - name: Instituto Nacional da Mata Atlântica
date: last-modified
date-format: "[Last compiled on] D MMMM, YYYY - HH:mm[h]"
format: 
  html:
    code-fold: show  # Determine code collapsed 
    engine: knitr
editor: visual
toc: true
toc-location: left
execute:
  cache: true        #Chck if it is always works well
knitr:
  opts_chunk:
    comment: "#>"
    collapse: true
reference-location: margin
citation-location: margin
tags:
  - Demographic buffering
---

```{css, echo = FALSE, title="Determine table width and size in Quarto"}
.output {
max-height: 500px;
overflow-y: scroll;
}
```

# README

The following script provide the general framework used to analyse demographic buffering continuum in Santos et al. in review: Population responses to environmental stochasticity are primarily driven by survival-reproduction trade-offs and mediated by aridity

Intermediary code and data steps are sourced along the framework Intermediary code and data include:

1.  Data cleaning and selection and its intermediary data
2.  Life history traits calculation and its intermediary data
3.  Climatic variables calculation
4.  Analyses with MCMCglmm
5.  Core function: Stochastic elasticities of variance

## Settings

```{r message=FALSE, warning=FALSE, title="packages, cleaning and directory setting"}
#Packages
library(tidyverse)	#v2.0.0
library(popbio)		#v2.7		
library(popdemo)		#v1.3.1
library(ggplot2)		#v3.5.0
library(scales)		#v1.3.0
library(tidyr)		#v1.3.0
library(viridis)		#v0.6.3
library(FactoMineR)	#v2.8
library(factoextra)	#v1.0.7
library(Rcompadre)	#v1.2.1
library(Rage)		#v1.4.0
library(vegan)		#v2.6.4
library(rstatix)		#0.7.2
library(Rmosaic) ; # remotes::install_github("mosaicdatabase/Rmosaic")
library(tidybayes)	#v3.0.6
library(treeio)		#v1.24.1   DOI: 10.18129/B9.bioc.treeio
library(ggtree)		#DOI: 10.18129/B9.bioc.ggtree
library(MCMCglmm)		#v2.35

rm(list=ls())   #Cleam memory
gc()            #Clean memory


DataDir<-"Data"
```

```{r include=FALSE, title="kableExtra package for better presentation"}
library(kableExtra)
```

## Session Info and loaded packages

```{r echo=FALSE, title="SessionInfo for replicability"}

sessionInfo()

#cbind(unlist(loadedNamespaces()),
#  unlist(lapply(
#	lapply(loadedNamespaces(),packageVersion),
#		as.character)))%>%
#		data.frame()%>%arrange(-desc(X1))%>%
#   setNames(c("Package", "Version"))%>%
#  knitr::kable()%>%
#  scroll_box(width = "100%", height = "200px")

```

# Step 1 - Load data and cleaning

COMPADRE, COMADRE and MOSAIC data selection and cleaning

Produce two datasets:

1.  `CleanData`:
    -   Filter matrix singularity,
    -   presence of fecundity,
    -   individual matrices only
    -   Noncaptive populations
    -   Check ergodicity
    -   Subset variables to make improve readability
    -   Remove data without phylogenetic correspondence in supertree
2.  `supertree`
    -   Extract supertree from MOSAIC database (Bernard et al. 2023 Scientific Data).

```{r eval=FALSE, include=TRUE, title="Cleaning and data selection"}
source("1 - Data cleaning and selection.R")
#file.edit("1 - Data cleaning and selection.R")
```

```{r, title="Metadata creation"}

# Load cleaned data
CleanData<-readRDS("Data/CleanData.RDS")
supertree<-readRDS("Data/supertree.RDS")

Metadata<-CleanData$Metadata
MetadataClean<-CleanData$MetadataClean

#Reduce (more) data to improve redability
MetadataFinal<-MetadataClean%>%select(-c(lambda,Ecoregion,Binomial))

MetadataFinal<-MetadataFinal%>%
	left_join(.,
			Metadata%>%select(ID,StudyStart, StudyDuration, StudyEnd)%>%distinct(),
				by="ID")

rm(CleanData)	#Remove non-used data

```

```{r, title="Metadata overview"}
MetadataFinal%>% kable %>%
  kable_styling("striped", full_width = F) %>% 
 scroll_box(width = "700px", height = "200px")
```

# Step 2 - Life history traits

Calculate life-history traits from populations filtered in `CleanData`. Also, calculate Mahalanobis distance and identify outliers.

Life-history metrics calculated

-   $L_{a}$ = mean age at first reproduction
-   $L_a prop$ = probability of achieving reproductive maturity
-   $e$ = mean life expectancy
-   shape_surv ( $H$)= Shape of survirvorship - Equivalent to Keyfitz' entropy (see Capdevila 2020 Func. Ecology https://doi.org/10.1111/1365-2435.13604
-   shape_rep( $D$ ) = Shape of reproduction - Equivalent to Demetrius' entropy (see Baudisch & Stott 2019 - https://doi.org/10.1111/2041-210X.13289
-   growth $\gamma$ =

Scripts available in `2 - Life history traits calculation.R` produces dataset `LHtraits.RDS` which is ready for the analyses

```{r eval=FALSE, include=TRUE,title="Life history calculation"}
source("2 - Life history traits calculation.R")
# file.edit("2 - Life history traits calculation.R")
```

Load life-history traits data and remove outliers outliers using

```{r,title="Loading life history data already calculated"}
LHtraits<-readRDS("Data/LHtraits.RDS")
spLHmat<-LHtraits%>%
	filter(is.outlier=="FALSE")%>%
		select(-c(is.outlier,mahal.dist))	%>%
column_to_rownames(var = "ID")

```

```{r echo=FALSE,title="Life history overview - table"}
spLHmat%>% kable %>%
  kable_styling("striped", full_width = T) %>% 
 scroll_box(width = "500px", height = "200px")

#Correlation plot - check colinearity
#spLHmat%>%cor()%>%corrplot::corrplot(.,title="Check Colinerarity on LH traits")


```

# Step 3 - Climatic data - Extract and summarise climatic information

Two scripts are necessary :

-   3a - Climatic data extraction.R
    -   Climatic Download data and data extraction from CHELSA
        -   Because data download and information extraction is quite time consuming, an intermediary datasets are produced for each variable: Tmin, Tmax, Precipitation
-   3b - Climatic variables calculation.R
    -   Data summary and metrics extraction described in methods
    -   Produces final dataset to analyse: "climate_df.RDS"
        -   Includes: environmental trend, amplitude, and stochasticisticy

## Step 3a - Extract climatic data

Data come from Chelsacruts. An intermediary dataset containing list for all climatic layers (monthly precipitation and temperature) are available in "ChelsacrutsDataV1.xlsx"[^1]. This dataset will be used to automatize data download;

[^1]: Example of link to Chelsacruts climatic layers https://os.zhdk.cloud.switch.ch/envicloud/chelsa/chelsa_V1/chelsa_cruts/prec/CHELSAcruts_prec_10_1901_V.1.0.tif

```{r eval=FALSE, include=TRUE, title="Chelsa data extraction"}
#source("3a - Climatic data extraction.R")
#file.edit("3a - Climatic data extraction.R")
```

## Step 3b - Climatic variables calculation

- Data summary and metrics extraction described in methods
- Produce final dataset to analyse: "climate_df.RDS"
- Environmental trend, amplitude, and stochasticisticy

Produces the intermediary dataset `climate_df.RDS`

```{r,title="Load already extracted climatic data"}
#source("3b - Climatic variables calculation.R")
#file.edit("3b - Climatic variables calculation.R")
climate_df<-readRDS("Data/climate_df.RDS")

```

```{r,title="Climatic data overview - table"}
climate_df %>% kable %>%
  kable_styling("striped", full_width = F) %>% 
 scroll_box(width = "500px", height = "200px")
```

# Step 4 - Summarising life-history traits and climatic variables in their respectives Principal Component Analysis


## 4.1. Life-history PCA
```{r,title="Life-history PCA"}
LHpca<-spLHmat%>%filter(complete.cases(.))%>%PCA(.,graph=FALSE,scale=TRUE) # Using raw data without imputatation

# LHpca - Map variables
LHpca$eig%>%t()	#Explained variables
LHpca$ind$coord	#Eigenvalues
dimdesc(LHpca, axes = 1:3, proba = 0.05)

#Check PCA
cowplot::plot_grid(nrow=1,
cowplot::plot_grid(ncol=1,
fviz_eig(LHpca)+theme_bw(base_size=14),
fviz_pca(LHpca, geom=c("point"))+theme_bw(base_size=14)),
LHpca$var$cor%>%ggcorrplot::ggcorrplot(method = "circle")+theme_bw(base_size=14)+
  theme(axis.text.x=element_text(angle=75,hjust=1)))+
coord_fixed(ratio=.50)

#ggsave(file="Figures/PCALH.svg")


#Use Principal Components as variables - add to LHtraits
LHtraits<-left_join(by="ID",
	LHtraits,
	LHpca$ind$coord%>%data.frame()%>%
	rownames_to_column(var="ID")%>%as_tibble()%>%
rename_with(., ~ gsub("Dim", "LHAxis", .x, fixed = TRUE))%>%
	select(ID,LHAxis.1:LHAxis.2))%>%
filter(complete.cases(.))
```


## 4.2a. Environmental PCA
```{r,title="Environmental PCA"}
climate_df%>%select(-ID)%>%cor()%>%corrplot::corrplot()

# Produce the climatic/environmental PCA
ClimPCA<-climate_df%>%
mutate_at(vars(-c(ID)),scale)%>%
column_to_rownames("ID")%>%
#cor(.)%>%corrplot::corrplot(.)
PCA(.,graph=F,scale=FALSE)

ClimPCA$ind$coord

cowplot::plot_grid(nrow=1,
cowplot::plot_grid(ncol=1,
fviz_eig(ClimPCA)+theme_bw(base_size=14),
fviz_pca(ClimPCA, geom=c("point"))+theme_bw(base_size=14)),
ClimPCA$var$cor%>%ggcorrplot::ggcorrplot(method = "circle")+theme_bw(base_size=14)+
  theme(axis.text.x=element_text(angle=75,hjust=1)))+
coord_fixed(ratio=.60)

#ggsave(file="Figures/PCAEnv.svg")


ClimPCA$ind$coord

dimdesc(ClimPCA, axes = 1:3, proba = 0.05)


```
### 4.2b Mapping climatic axes


```{r, title="Mapping climatic data - Supplementary material production"}
Plot_clim<-Metadata%>%dplyr::select(.,c(ID,Lat,Lon))%>%
distinct(.,.keep_all=T)%>%
left_join(.,
data.frame(ClimPCA$ind$coord)%>%rownames_to_column(.,var="ID"),
by="ID")%>%
filter(complete.cases(.))%>%
mutate(across(Dim.1:Dim.3,scales::rescale,to=c(0,1)))

#Plot map
world <- map_data("world")

gmap<-ggplot() +
geom_map(
    data = world, map = world,
    aes(long, lat, map_id = region),
    color = "grey50", fill = "grey95", linewidth= 0.05)

gmap +
 geom_point(
    data = left_join(Plot_clim,distinct(MetadataClean,ID,.keep_all=T)%>%select(ID,Kingdom)),
    aes(x=Lon, y=Lat, fill = Dim.1,stroke=.3,size=Dim.2,shape=Kingdom))+
scale_shape_manual(values=c(23,21))+
scale_fill_viridis(option="magma")+
scale_size(range = c(1.5, 5))+
 theme_void()

```
# 5. Calculate demographic buffering from lower level vital rates

Source mainfunction used in the calculation of	stochastic elasticities within respect to variance of lower level vital rates

- This script creates the following functions:
  1. "my.vitalRatePerturbation": Produce the stochasticity elasticity with respect to variance.
  2. "array_to_matrix": Ancilliary function


```{r}
source("MainFunction - Stochastic elasticities of variance lower level.R")
```


> EXAMPLE: Case where shrinking is possible in Animal
 Alternation between reproductive non-reproductive stage
 Reproductive estage <--> non-reproductive stage
>```
>filter(Metadata,ID=="Urs2.183_726")$mat
>lapply(filter(Metadata,ID=="Urs2.183_726")$mat,matA)
>my.vitalRatePerturbation(
>lapply(filter(Metadata,ID=="Urs2.183_726")$mat,matU),
>lapply(filter(Metadata,ID=="Urs2.183_726")$mat,matF),
>lapply(filter(Metadata,ID=="Urs2.183_726")$mat,matC))
>```



